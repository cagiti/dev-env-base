#!/bin/bash

function print_motd(){
  cat /etc/motd
}

function load_ssh_key(){
  if [ -z "$SSH_AUTH_SOCK" ] ; then
    eval `ssh-agent -s` >/dev/null
    ssh-add >/dev/null 2>/dev/null
  fi
}

function setup_aliases(){
  alias l='ls -l'
  alias ll='ls -la'
  alias tmux='tmux -u'
  alias t='tmux -u'
  alias kc='kubectl'
  complete -o default -F __start_kubectl kc
  alias wkc='tmux split-window -h "kubectl get pods -w"; tmux split-window -v "kubectl get prowjobs -w"; tmux split-window -v "kubectl get pipelinerun -w"; jx logs -k'
  alias ccrd='for crd in $(kc get crds | grep -v NAME | awk '"'"'{print $1}'"'"'); do count=$(kc get $crd 2>/dev/null | grep -v NAME | wc -l); echo "$count : $crd"; done | sort -rn | awk '"'"'{if ($1 > 500){print}}'"'"''
}

function setup_hub(){
  eval "$(hub alias -s bash)"
  source /etc/hub/.hub.bash_completion.sh
}

function setup_bash_completion(){
  source <(jx completion bash)
  source /usr/share/bash-completion/bash_completion
  source <(kubectl completion bash)
  if [[ -d /usr/local/google-cloud-sdk/path.bash.inc ]]
  then
    source '/usr/local/google-cloud-sdk/path.bash.inc'
  fi
  source '/usr/local/google-cloud-sdk/completion.bash.inc'
}

function execute_profile_if_exists(){
  if [ -f ~/.bash_profile ]
  then
    source ~/.bash_profile
  fi
}

function setup_environment(){

  # append to the history file, don't overwrite it
  shopt -s histappend
  shopt -s checkwinsize

  export HISTSIZE=10000
  export HISTFILESIZE=20000
  export CHARSET=UTF-8
  export PS1='$(echo -e $"'"\xF0\x9F\x99\x85"'") \[\033[32m\]\u \[\033[33m\]\w($(git branch 2>/dev/null | sed -n "s/* \(.*\)/\1/p"))\[\033[00m\]$ '
  export JAVA_HOME=$(dirname $(readlink -f $(which java)) | sed 's:/bin::')
  export PATH=$PATH:$JAVA_HOME/bin
  export TERM=xterm-256color
  execute_profile_if_exists

  TMUX_WINDOW=$(tmux ls | cut -d' ' -f2)
  DEFAULT_KUBE="/home/developer/.kube"
  TMUX_KUBE="${DEFAULT_KUBE}_tw${TMUX_WINDOW}"
  DEFAULT_KUBECONFIG="${DEFAULT_KUBE}/config"
  TMUX_KUBECONFIG="${TMUX_KUBE}/config"

  if [ ! -f ${TMUX_KUBECONFIG} ]
  then
    mkdir -p ${TMUX_KUBE}
    cp ${DEFAULT_KUBECONFIG} ${TMUX_KUBECONFIG}
  fi
  export KUBECONFIG=$TMUX_KUBECONFIG
}

print_motd
setup_bash_completion
setup_aliases
load_ssh_key
setup_hub
setup_environment
